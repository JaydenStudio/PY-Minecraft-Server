# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'server.ui'
#
# Created by: PyQt5 UI code generator 5.15.5
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
from tkinter import messagebox #load messagebox from tkinter
import os#load os
import time#load time
import threading#load threading
import webbrowser #load webbrowser
try:
    from PyQt5 import QtCore, QtGui, QtWidgets
except ModuleNotFoundError:
    os.system("python install-pyqt5")
    print("Please restart this script!")
    exit()

#Fuction
def stop():#Fuction stop
    exit()#exit python
def version():#Fuction version
    messagebox.showinfo("version","You are using 4.0")#info text "You are using 4.0"
#end
def github():#Fuction github
    webbrowser.open("https://github.com/JaydenStudio/PY-Minecraft-Server")#open github
#Start
def start(): #Fuction start
    serverfile=os.path.exists("./Minecraft/server.jar")#True or False
    if serverfile==True: #if serverfile is True
        print("Server starts in 5 seconds")#print "Server starts in 5 seconds"
        time.sleep(5)#sleep 5 seconds
        os.system("cd Minecraft && java -jar server.jar")#Start server
        print("restarting server")#print restart server
        start()
    else:#if serverfile is False
        print("Error: server.jar not found")#print "Error: server.jar not found"
#end
#run
def main():#Function main
    t1 = threading.Thread(target=start) #set target : start
    t1.start()#start server
    threading.enumerate()

messagebox.showinfo("Tips:","Use jdk17 or above")#messagebox info text "Use jdk17 or above"
b=os.path.exists("Minecraft")#True or False
if b==True:#if b is True
    print("INFO: Folder exists")#print "INFO: Folder exists"
    serverfile=os.path.exists("./Minecraft/server.jar")#True or False
    if serverfile==True:#if serverfile is True
        messagebox.showinfo("server","Successfully found server.jar")#messagebox info text "Successfully found server.jar"
    else:#if serverfile is False
        messagebox.showinfo("server","server.jar not found")#messagebox info text "server.jar not found"
else:#if b is False
    os.mkdir("Minecraft")#make directory "Minecraft"
    print("Folder Minecraft created successfully!")#print "Folder Minecraft created successfully!"
testfile=os.path.exists("./helloworld.jar")#True or False
if testfile==True:#if testfile is True
    os.system("java -jar helloworld.jar")#start test file
    os.system("echo If you see Hello world!,it means that your installed java successfully!")#print "If you see Hello world!,it means that your installed java successfully!"
else:#if testfile is False
    print("helloworld.jar not found")#print "helloworld.jar not found"

class Ui_Dialog(object):
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(543, 140)
        self.pushButton = QtWidgets.QPushButton(Dialog)
        self.pushButton.setGeometry(QtCore.QRect(60, 40, 93, 71))
        self.pushButton.setObjectName("pushButton")
        self.pushButton_2 = QtWidgets.QPushButton(Dialog)
        self.pushButton_2.setGeometry(QtCore.QRect(170, 40, 93, 71))
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_3 = QtWidgets.QPushButton(Dialog)
        self.pushButton_3.setGeometry(QtCore.QRect(280, 40, 93, 71))
        self.pushButton_3.setObjectName("pushButton_3")
        self.pushButton_4 = QtWidgets.QPushButton(Dialog)
        self.pushButton_4.setGeometry(QtCore.QRect(400, 37, 93, 71))
        self.pushButton_4.setObjectName("pushButton_4")
        self.retranslateUi(Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)
        self.pushButton.clicked.connect(main)
        self.pushButton_2.clicked.connect(stop)
        self.pushButton_3.clicked.connect(github)
        self.pushButton_4.clicked.connect(version)

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Dialog"))
        self.pushButton.setText(_translate("Dialog", "Start!"))
        self.pushButton_2.setText(_translate("Dialog", "exit"))
        self.pushButton_3.setText(_translate("Dialog", "Github"))
        self.pushButton_4.setText(_translate("Dialog", "version"))

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Dialog = QtWidgets.QDialog()
    ui = Ui_Dialog()
    ui.setupUi(Dialog)
    Dialog.show()
    sys.exit(app.exec_())
